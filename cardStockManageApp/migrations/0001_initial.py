# Generated by Django 5.2.4 on 2025-08-27 04:40

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CardSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('name_kr', models.CharField(blank=True, max_length=100)),
                ('name_jp', models.CharField(blank=True, max_length=100)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Card Set',
                'verbose_name_plural': 'Card Sets',
                'db_table': 'card_sets',
                'ordering': ['-release_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Rarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rarity_code', models.CharField(max_length=20)),
                ('rarity_name', models.CharField(max_length=50)),
                ('rarity_name_kr', models.CharField(blank=True, max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Rarity',
                'verbose_name_plural': 'Rarities',
                'db_table': 'rarities',
                'ordering': ['sort_order', 'rarity_code'],
            },
        ),
        migrations.CreateModel(
            name='TCGGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('name_kr', models.CharField(blank=True, max_length=50)),
                ('slug', models.SlugField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'TCG Game',
                'verbose_name_plural': 'TCG Games',
                'db_table': 'tcg_games',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=200)),
                ('name_kr', models.CharField(blank=True, max_length=200)),
                ('name_jp', models.CharField(blank=True, max_length=200)),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='cardStockManageApp.cardset')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='cardStockManageApp.tcggame')),
            ],
            options={
                'verbose_name': 'Card',
                'verbose_name_plural': 'Cards',
                'db_table': 'cards',
                'ordering': ['set', 'card_number'],
            },
        ),
        migrations.CreateModel(
            name='CardVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_code', models.CharField(choices=[('normal', 'Normal'), ('parallel', 'Parallel'), ('secret', 'Secret'), ('alt-art', 'Alternate Art'), ('aa', 'AA'), ('sp', 'Special'), ('promo', 'Promo')], default='normal', max_length=50)),
                ('version_name', models.CharField(blank=True, max_length=100)),
                ('display_code', models.CharField(blank=True, max_length=20)),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('image_url_small', models.URLField(blank=True, max_length=500)),
                ('is_foil', models.BooleanField(default=False)),
                ('is_promo', models.BooleanField(default=False)),
                ('is_alternate_art', models.BooleanField(default=False)),
                ('market_code', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='cardStockManageApp.card')),
                ('rarity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='card_versions', to='cardStockManageApp.rarity')),
            ],
            options={
                'verbose_name': 'Card Version',
                'verbose_name_plural': 'Card Versions',
                'db_table': 'card_versions',
                'ordering': ['card', 'rarity__sort_order'],
            },
        ),
        migrations.AddField(
            model_name='rarity',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rarities', to='cardStockManageApp.tcggame'),
        ),
        migrations.AddField(
            model_name='cardset',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sets', to='cardStockManageApp.tcggame'),
        ),
        migrations.CreateModel(
            name='CardVersionAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100)),
                ('alias_type', models.CharField(choices=[('code', 'Code'), ('name', 'Name'), ('nickname', 'Nickname')], default='nickname', max_length=10)),
                ('card_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='cardStockManageApp.cardversion')),
            ],
            options={
                'verbose_name': 'Card Version Alias',
                'verbose_name_plural': 'Card Version Aliases',
                'db_table': 'card_version_aliases',
                'indexes': [models.Index(fields=['alias'], name='card_versio_alias_bb44e4_idx'), models.Index(fields=['card_version'], name='card_versio_card_ve_433622_idx')],
            },
        ),
        migrations.CreateModel(
            name='DailyPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('avg_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('closing_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('sales_count', models.IntegerField(default=0)),
                ('total_quantity', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('card_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_prices', to='cardStockManageApp.cardversion')),
            ],
            options={
                'verbose_name': 'Daily Price History',
                'verbose_name_plural': 'Daily Price Histories',
                'db_table': 'daily_price_history',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['card_version', 'date'], name='daily_price_card_ve_c7c8ff_idx'), models.Index(fields=['date'], name='daily_price_date_33459b_idx')],
                'unique_together': {('card_version', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('reserved_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('location', models.CharField(blank=True, max_length=50)),
                ('min_stock_level', models.IntegerField(default=0)),
                ('last_restock_date', models.DateField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('card_version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='cardStockManageApp.cardversion')),
            ],
            options={
                'verbose_name': 'Inventory',
                'verbose_name_plural': 'Inventories',
                'db_table': 'inventory',
                'indexes': [models.Index(fields=['quantity'], name='inventory_quantit_67df30_idx'), models.Index(fields=['updated_at'], name='inventory_updated_765284_idx')],
            },
        ),
        migrations.CreateModel(
            name='InventoryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('IN', '입고'), ('OUT', '판매'), ('ADJUST', '조정'), ('RETURN', '반품')], max_length=10)),
                ('quantity_change', models.IntegerField()),
                ('quantity_after', models.IntegerField()),
                ('price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=50)),
                ('customer_info', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('staff_name', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('card_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_logs', to='cardStockManageApp.cardversion')),
            ],
            options={
                'verbose_name': 'Inventory Log',
                'verbose_name_plural': 'Inventory Logs',
                'db_table': 'inventory_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['card_version'], name='inventory_l_card_ve_e1e6c2_idx'), models.Index(fields=['transaction_type'], name='inventory_l_transac_91cf8a_idx'), models.Index(fields=['created_at'], name='inventory_l_created_090bb8_idx')],
            },
        ),
        migrations.CreateModel(
            name='MarketPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardmarket_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('bunjang_avg_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('online_lowest_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('card_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_prices', to='cardStockManageApp.cardversion')),
            ],
            options={
                'verbose_name': 'Market Price',
                'verbose_name_plural': 'Market Prices',
                'db_table': 'market_prices',
                'indexes': [models.Index(fields=['card_version'], name='market_pric_card_ve_33e982_idx'), models.Index(fields=['last_updated'], name='market_pric_last_up_51f188_idx')],
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buy_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('sell_price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('special_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('special_price_start_date', models.DateTimeField(blank=True, null=True)),
                ('special_price_end_date', models.DateTimeField(blank=True, null=True)),
                ('online_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('is_negotiable', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('card_version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='price', to='cardStockManageApp.cardversion')),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
                'db_table': 'prices',
                'indexes': [models.Index(fields=['sell_price'], name='prices_sell_pr_6db391_idx'), models.Index(fields=['updated_at'], name='prices_updated_fe240e_idx')],
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_buy_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('new_buy_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('old_sell_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('new_sell_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('change_reason', models.CharField(blank=True, max_length=200)),
                ('changed_by', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('card_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='cardStockManageApp.cardversion')),
            ],
            options={
                'verbose_name': 'Price History',
                'verbose_name_plural': 'Price Histories',
                'db_table': 'price_history',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['card_version'], name='price_histo_card_ve_a228e5_idx'), models.Index(fields=['created_at'], name='price_histo_created_be9adc_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='cardversion',
            index=models.Index(fields=['card'], name='card_versio_card_id_d50153_idx'),
        ),
        migrations.AddIndex(
            model_name='cardversion',
            index=models.Index(fields=['rarity'], name='card_versio_rarity__feda42_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cardversion',
            unique_together={('card', 'rarity', 'version_code')},
        ),
        migrations.AddIndex(
            model_name='rarity',
            index=models.Index(fields=['rarity_code'], name='rarities_rarity__4daf4e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rarity',
            unique_together={('game', 'rarity_code')},
        ),
        migrations.AddIndex(
            model_name='cardset',
            index=models.Index(fields=['set_code'], name='card_sets_set_cod_b5b4e6_idx'),
        ),
        migrations.AddIndex(
            model_name='cardset',
            index=models.Index(fields=['release_date'], name='card_sets_release_8ae118_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cardset',
            unique_together={('game', 'set_code')},
        ),
        migrations.AddIndex(
            model_name='card',
            index=models.Index(fields=['name'], name='cards_name_6b179e_idx'),
        ),
        migrations.AddIndex(
            model_name='card',
            index=models.Index(fields=['card_number'], name='cards_card_nu_251768_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='card',
            unique_together={('game', 'set', 'card_number')},
        ),
    ]
